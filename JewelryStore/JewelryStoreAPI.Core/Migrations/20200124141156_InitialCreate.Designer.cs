// <auto-generated />
using System;
using JewelryStoreAPI.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace JewelryStoreAPI.Core.Migrations
{
    [DbContext(typeof(JewelryStoredbContext))]
    [Migration("20200124141156_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("JewelryStoreAPI.Core.Entities.Basket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Baskets");
                });

            modelBuilder.Entity("JewelryStoreAPI.Core.Entities.Bijouterie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<int>("BijouterieType")
                        .HasColumnType("integer");

                    b.Property<string>("Brand")
                        .HasColumnType("text");

                    b.Property<decimal>("Cost")
                        .HasColumnType("numeric");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Bijouteries");
                });

            modelBuilder.Entity("JewelryStoreAPI.Core.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("BasketID")
                        .HasColumnType("integer");

                    b.Property<DateTime>("OrderTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("BasketID")
                        .IsUnique();

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("JewelryStoreAPI.Core.Entities.PreciousMetalStuff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<string>("Brand")
                        .HasColumnType("text");

                    b.Property<decimal>("Cost")
                        .HasColumnType("numeric");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<int>("MetalType")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("PreciousMetalStuffType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("PreciousMetalStuffs");
                });

            modelBuilder.Entity("JewelryStoreAPI.Core.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("BijouterieId")
                        .HasColumnType("integer");

                    b.Property<int?>("PreciousMetalStuffId")
                        .HasColumnType("integer");

                    b.Property<int?>("WristwatchId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BijouterieId");

                    b.HasIndex("PreciousMetalStuffId");

                    b.HasIndex("WristwatchId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("JewelryStoreAPI.Core.Entities.ProductBasket", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int>("BasketId")
                        .HasColumnType("integer");

                    b.HasKey("ProductId", "BasketId");

                    b.HasIndex("BasketId");

                    b.ToTable("ProductBaskets");
                });

            modelBuilder.Entity("JewelryStoreAPI.Core.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("JewelryStoreAPI.Core.Entities.Wristwatch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<string>("Brand")
                        .HasColumnType("text");

                    b.Property<int>("CaseColor")
                        .HasColumnType("integer");

                    b.Property<decimal>("Cost")
                        .HasColumnType("numeric");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<int>("DialColor")
                        .HasColumnType("integer");

                    b.Property<int>("DiameterMM")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("StrapColor")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Wristwatchs");
                });

            modelBuilder.Entity("JewelryStoreAPI.Core.Entities.Basket", b =>
                {
                    b.HasOne("JewelryStoreAPI.Core.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JewelryStoreAPI.Core.Entities.Order", b =>
                {
                    b.HasOne("JewelryStoreAPI.Core.Entities.Basket", "Basket")
                        .WithOne("Order")
                        .HasForeignKey("JewelryStoreAPI.Core.Entities.Order", "BasketID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JewelryStoreAPI.Core.Entities.Product", b =>
                {
                    b.HasOne("JewelryStoreAPI.Core.Entities.Bijouterie", "Bijouterie")
                        .WithMany("Products")
                        .HasForeignKey("BijouterieId");

                    b.HasOne("JewelryStoreAPI.Core.Entities.PreciousMetalStuff", "PreciousMetalStuff")
                        .WithMany("Products")
                        .HasForeignKey("PreciousMetalStuffId");

                    b.HasOne("JewelryStoreAPI.Core.Entities.Wristwatch", "Wristwatch")
                        .WithMany("Products")
                        .HasForeignKey("WristwatchId");
                });

            modelBuilder.Entity("JewelryStoreAPI.Core.Entities.ProductBasket", b =>
                {
                    b.HasOne("JewelryStoreAPI.Core.Entities.Basket", "Basket")
                        .WithMany("ProductBaskets")
                        .HasForeignKey("BasketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JewelryStoreAPI.Core.Entities.Product", "Product")
                        .WithMany("ProductBaskets")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
